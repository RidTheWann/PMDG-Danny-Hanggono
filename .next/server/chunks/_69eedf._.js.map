{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/api/dashboard-stats/route/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/dashboard-stats/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const today = new Date();\n    const currentMonth = today.getMonth() + 1;\n    const currentYear = today.getFullYear();\n\n    // Get current date in YYYY-MM-DD format\n    const todayStr = today.toISOString().split('T')[0];\n\n    // Fetch data from Google Sheets\n    const sheetsUrl = process.env.GOOGLE_SHEETS_URL;\n    if (!sheetsUrl) {\n      throw new Error('Google Sheets URL not configured');\n    }\n\n    // Get data for current month\n    const response = await fetch(`${sheetsUrl}?action=get&month=${currentMonth}&year=${currentYear}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data from Google Sheets');\n    }\n\n    const data = await response.json();\n    const sheetData = data.data || [];\n\n    // Skip header row\n    const records = sheetData.slice(1);\n\n    // Calculate stats\n    let totalPasienHariIni = 0;\n    let totalPasienBulanIni = 0;\n    let antreanTerakhir = 0;\n    let pasiенBPJS = 0;\n    let pasienUmum = 0;\n\n    records.forEach((row: any[]) => {\n      if (row.length === 0) return;\n\n      const tanggalKunjungan = row[0] || '';\n      const noAntrean = row[1] || '';\n      const jenisPasien = row[5] || '';\n\n      totalPasienBulanIni++;\n\n      // Count patients for today\n      if (tanggalKunjungan && tanggalKunjungan.includes(todayStr)) {\n        totalPasienHariIni++;\n\n        // Get latest queue number for today\n        const currentAntrean = parseInt(noAntrean) || 0;\n        if (currentAntrean > antreanTerakhir) {\n          antreanTerakhir = currentAntrean;\n        }\n      }\n\n      // Count patient types\n      if (jenisPasien === 'BPJS') {\n        pasiенBPJS++;\n      } else if (jenisPasien === 'UMUM') {\n        pasienUmum++;\n      }\n    });\n\n    return NextResponse.json({\n      totalPasienHariIni,\n      totalPasienBulanIni,\n      antreanTerakhir,\n      pasiенBPJS,\n      pasienUmum\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch dashboard stats' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,QAAQ,IAAI;QAClB,MAAM,eAAe,MAAM,QAAQ,KAAK;QACxC,MAAM,cAAc,MAAM,WAAW;QAErC,wCAAwC;QACxC,MAAM,WAAW,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAElD,gCAAgC;QAChC,MAAM;QACN;;;QAIA,6BAA6B;QAC7B,MAAM,WAAW,MAAM,MAAM,CAAC,EAAE,UAAU,kBAAkB,EAAE,aAAa,MAAM,EAAE,YAAY,CAAC,EAAE;YAChG,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,YAAY,KAAK,IAAI,IAAI,EAAE;QAEjC,kBAAkB;QAClB,MAAM,UAAU,UAAU,KAAK,CAAC;QAEhC,kBAAkB;QAClB,IAAI,qBAAqB;QACzB,IAAI,sBAAsB;QAC1B,IAAI,kBAAkB;QACtB,IAAI,aAAa;QACjB,IAAI,aAAa;QAEjB,QAAQ,OAAO,CAAC,CAAC;YACf,IAAI,IAAI,MAAM,KAAK,GAAG;YAEtB,MAAM,mBAAmB,GAAG,CAAC,EAAE,IAAI;YACnC,MAAM,YAAY,GAAG,CAAC,EAAE,IAAI;YAC5B,MAAM,cAAc,GAAG,CAAC,EAAE,IAAI;YAE9B;YAEA,2BAA2B;YAC3B,IAAI,oBAAoB,iBAAiB,QAAQ,CAAC,WAAW;gBAC3D;gBAEA,oCAAoC;gBACpC,MAAM,iBAAiB,SAAS,cAAc;gBAC9C,IAAI,iBAAiB,iBAAiB;oBACpC,kBAAkB;gBACpB;YACF;YAEA,sBAAsB;YACtB,IAAI,gBAAgB,QAAQ;gBAC1B;YACF,OAAO,IAAI,gBAAgB,QAAQ;gBACjC;YACF;QACF;QAEA,OAAO,wLAAa,IAAI,CAAC;YACvB;YACA;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,wLAAa,IAAI,CACtB;YAAE,OAAO;QAAkC,GAC3C;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}